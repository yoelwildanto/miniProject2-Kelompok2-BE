// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id          Int            @id @default(autoincrement())
  username    String?        @db.VarChar(255)
  email       String?        @db.VarChar(255)
  password    String?        @db.VarChar(255)
  avatar      String?        @db.VarChar(255)
  role        roles          @relation(fields: [roleId], references: [id])
  roleId      Int
  transaction transactions[]
}

model roles {
  id   Int     @id @default(autoincrement())
  role String? @db.VarChar(255)
  user users[]
}

model transactions {
  id               Int                 @id @default(autoincrement())
  total_quantity   Int
  total_price      Int
  date             DateTime            @default(now())
  cashier          users               @relation(fields: [cashier_id], references: [id])
  cashier_id       Int
  transaction_item transaction_items[]
}

model transaction_items {
  id             Int          @id @default(autoincrement())
  total_quantity Int
  product        products     @relation(fields: [product_id], references: [id])
  product_id     Int
  transaction    transactions @relation(fields: [transaction_id], references: [id])
  transaction_id Int
}

model products {
  id          Int      @id @default(autoincrement())
  name        String  @db.VarChar(255)
  price       Int
  image       String  @db.VarChar(255)
  description String  @db.Text
  status      String  @db.VarChar(255)
  quantity    Int
  created_at  DateTime @default(now())
  updated_at  DateTime

  transaction_item transaction_items[]
  categories       categories_products[]
}

model categories {
  id       Int                   @id @default(autoincrement())
  category String?               @db.VarChar(255)
  products categories_products[]
}

model categories_products {
  category_id Int
  product_id  Int

  category categories @relation(fields: [category_id], references: [id])
  product  products   @relation(fields: [product_id], references: [id])

  @@id([category_id, product_id])
}
