// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Roles {
  id       Int     @id @default(autoincrement())
  roleName String
  user     Users[]
}

model Users {
  id          Int    @id @default(autoincrement())
  username    String
  email       String
  password    String
  phoneNumber String
  address     String @db.VarChar(1000)
  avatar      String @db.VarChar(1000)
  role        Roles  @relation(fields: [roleId], references: [id])
  roleId      Int

}

model Categories {
  id           Int        @id @default(autoincrement())
  categoryName String
  image        String     @db.VarChar(1000)
  product      Products[]
}

model Status {
  id         Int        @id @default(autoincrement())
  statusName String
  product    Products[]
}

model Products {
  id                  Int                   @id @default(autoincrement())
  productName         String
  category            Categories            @relation(fields: [categoryId], references: [id])
  categoryId          Int
  price               Decimal               @db.Decimal(10, 0)
  stock               Int
  description         String                @db.VarChar(1000)
  status              Status                @relation(fields: [statusId], references: [id])
  statusId            Int
  image               String                @db.VarChar(1000)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  transaction_details Transaction_Details[]
}

model Transactions {
  id                  Int                   @id @default(autoincrement())
  date                DateTime              @default(now())
  totalQuantity       Int
  totalPrice          Decimal               @db.Decimal(10, 0)
  payment_method      Payment_Method        @relation(fields: [payment_methodId], references: [id])
  payment_methodId    Int
  paymentAmount       Decimal               @db.Decimal(10, 0)
  paymentChange       Decimal               @db.Decimal(10, 0)
  transaction_details Transaction_Details[]
}

model Transaction_Details {
  id            Int          @id @default(autoincrement())
  product       Products     @relation(fields: [productId], references: [id])
  productId     Int
  transaction   Transactions @relation(fields: [transactionId], references: [id])
  transactionId Int
  quantity      Int
  price         Decimal      @db.Decimal(10, 0)
}

model Payment_Method {
  id          Int            @id @default(autoincrement())
  paymentName String
  transaction Transactions[]
}
